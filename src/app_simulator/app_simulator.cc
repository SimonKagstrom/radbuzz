#include "app_simulator.hh"

#include "ble_handler.hh"

#include <algorithm>
#include <array>

constexpr auto kStreets = std::array {
    "Mariehemsvägen",
    "Björnvägen",
    "Tunavägen",
    "Kämnärsvägen",
    "Willy-Andreas Allé",
    "Lindblomsvägen",
    "Östra Hamngatan",
    "Östra Prinsgatan",
    "Skeppargatan",
    "Vävar Johans gata",
    "Birkagatan",
    "Heimdalsgatan",
    "Sankt Mickelsgatan",
    "Braxvägen",
};

struct RawImageData
{
    uint32_t key;
    std::array<const uint8_t, kImageByteSize + 11> data;
};

constexpr auto kImages = std::array {
    RawImageData {
        // Destination
        0x9a84a956,
        {
            '9',  'a',  '8',  '4',  'a',  '9',  '5',  '6',  'x',  'x',  ';',

            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x00, 0x00,
            0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0,
            0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfc,
            0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0x03, 0xff, 0x00, 0x00, 0x00, 0x00,
            0xfe, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x7f, 0x80, 0x00,
            0x00, 0x03, 0xf8, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x1f,
            0xc0, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x0f, 0xc0, 0x00,
            0x00, 0x03, 0xe0, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x1f,
            0xc0, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x01, 0xf8, 0x00,
            0x00, 0x1f, 0x80, 0x0f, 0xf0, 0x01, 0xf8, 0x00, 0x00, 0x1f, 0x00, 0x0f, 0xf0, 0x01,
            0xf8, 0x00, 0x00, 0x1f, 0x00, 0x1f, 0xf8, 0x00, 0xf8, 0x00, 0x00, 0x1f, 0x00, 0x3f,
            0xf8, 0x00, 0xf8, 0x00, 0x00, 0x1f, 0x00, 0x3f, 0xfc, 0x00, 0xf8, 0x00, 0x00, 0x1f,
            0x00, 0x3f, 0xfc, 0x00, 0xf8, 0x00, 0x00, 0x1f, 0x00, 0x3f, 0xfc, 0x00, 0xf8, 0x00,
            0x00, 0x1f, 0x00, 0x0f, 0xf8, 0x00, 0xf8, 0x00, 0x00, 0x1f, 0x00, 0x0f, 0xf0, 0x00,
            0xf8, 0x00, 0x00, 0x1f, 0x00, 0x03, 0xc0, 0x00, 0xf8, 0x00, 0x00, 0x1f, 0x80, 0x00,
            0x00, 0x01, 0xf8, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x1f,
            0xc0, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x03, 0xf0, 0x00,
            0x00, 0x07, 0xc0, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07,
            0xe0, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x03, 0xf8, 0x00,
            0x00, 0x1f, 0xc0, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00,
            0xfc, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x7f, 0x00, 0x00,
            0x00, 0x00, 0x7f, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x03, 0xfc,
            0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0,
            0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00,
            0x07, 0xf8, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x7f, 0x80, 0x00, 0x00,
            0x00, 0x00, 0x01, 0xfe, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f,
            0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        },
    },
    RawImageData {
        0x3db5d6ba,
        {
            '3',  'd',  'b',  '5',  'd',  '6',  'b',  'a',  'x',  'x',  ';',

            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
            0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80,
            0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff,
            0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00,
            0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00,
            0x00, 0x00, 0x7f, 0xef, 0xf7, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xff, 0xcf, 0xf3, 0xff,
            0x00, 0x00, 0x00, 0x00, 0xff, 0xcf, 0xf3, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0x0f,
            0xf0, 0xff, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x0f, 0xf0, 0x7f, 0x00, 0x00, 0x00, 0x00,
            0x3c, 0x0f, 0xf0, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x38, 0x0f, 0xf0, 0x1c, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9f,
            0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00,
            0x04, 0x9f, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xf8, 0x00, 0x00,
            0x00, 0x00, 0x04, 0x80, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfc,
            0x00, 0x00, 0x00, 0x00, 0x24, 0x80, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0xfe, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0xfe,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x24, 0x80,
            0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x00,
            0x24, 0x80, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00,
            0x00, 0x00, 0x04, 0x94, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0,
            0x00, 0x00, 0x00, 0x00, 0x04, 0x9f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f,
            0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x1f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
            0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        },
    },
    RawImageData {
        // Roundabout straight ahead
        0x28936c85,
        {
            '2',  '8',  '9',  '3',  '6',  'c',  '8',  '5',  'x',  'x',  ';',

            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f,
            0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 0x00,
            0x00, 0x00, 0x01, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xe0,
            0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff,
            0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
            0x3f, 0xe7, 0xf3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe7, 0xf3, 0xff, 0x00, 0x00,
            0x00, 0x00, 0xff, 0x87, 0xf0, 0xff, 0x80, 0x00, 0x00, 0x00, 0xff, 0x87, 0xf0, 0x7f,
            0x80, 0x00, 0x00, 0x00, 0x3e, 0x07, 0xf0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x07,
            0xf0, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
            0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x93, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x24, 0x93, 0xff, 0x80, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0x00, 0x00, 0x00, 0x09, 0x24, 0x92, 0xff, 0xc0,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x09, 0x20, 0x00,
            0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x09,
            0x00, 0x00, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f,
            0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        },
    },
    RawImageData {
        // Left
        0x27d9a40f,
        {
            '2',  '7',  'd',  '9',  'a',  '4',  '0',  'f',  'x',  'x',  ';',

            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x01, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfc, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f,
            0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xe0, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x03, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x01, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80,
            0x00, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00,
            0x7f, 0xc0, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x0f, 0xfc, 0x00,
            0x00, 0x00, 0x1f, 0xc0, 0x00, 0x03, 0xfe, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x03,
            0xff, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x0f, 0xe0,
            0x00, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00,
            0x0f, 0xe0, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x1f, 0xc0,
            0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        },
    },
    RawImageData {
        // Destination + road (?)
        0x09cefe42,
        {
            '0',  '9',  'c',  'e',  'f',  'e',  '4',  '2',  'x',  'x',  ';',

            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x80,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f,
            0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
            0x01, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x03, 0xfe, 0x00, 0x00,
            0x00, 0x00, 0x03, 0xfc, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x3f,
            0x80, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x0f, 0xc0,
            0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00,
            0x1f, 0x80, 0xf8, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x1f, 0x80, 0xfc, 0x07, 0xe0, 0x00,
            0x00, 0x00, 0x1f, 0x81, 0xfc, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x1f, 0x01, 0xfe, 0x07,
            0xe0, 0x00, 0x00, 0x00, 0x1f, 0x01, 0xfe, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x1f, 0x81,
            0xfe, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x1f, 0x81, 0xfc, 0x07, 0xe0, 0x00, 0x00, 0x00,
            0x1f, 0x80, 0x78, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x0f, 0xc0, 0x00,
            0x00, 0x00, 0x0f, 0x80, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x0f,
            0x80, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x07, 0xe0,
            0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00,
            0x03, 0xf0, 0x00, 0x3f, 0x0f, 0x03, 0xf8, 0x00, 0x03, 0xf0, 0x00, 0x7e, 0x0f, 0x03,
            0xfc, 0x00, 0x03, 0xfc, 0x00, 0xfe, 0x1f, 0x03, 0xfc, 0x00, 0x01, 0xfc, 0x01, 0xfe,
            0x1f, 0x03, 0xfc, 0x00, 0x00, 0xfe, 0x01, 0xf8, 0x7f, 0x03, 0xfe, 0x00, 0x00, 0x7e,
            0x03, 0xf8, 0x7f, 0x03, 0xfe, 0x00, 0x00, 0x7f, 0x07, 0xf0, 0x7f, 0xff, 0xfe, 0x00,
            0x00, 0x3f, 0x07, 0xf0, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x3f, 0x8f, 0xe1, 0xff, 0xff,
            0xff, 0x00, 0x00, 0x1f, 0xdf, 0xc1, 0xff, 0xff, 0xff, 0x00, 0x00, 0x1f, 0xff, 0xc3,
            0xff, 0xff, 0xff, 0x80, 0x00, 0x07, 0xff, 0x87, 0xff, 0x03, 0xff, 0x80, 0x00, 0x03,
            0xff, 0x0f, 0xff, 0x03, 0xff, 0x80, 0x00, 0x03, 0xfe, 0x0f, 0xff, 0x03, 0xff, 0xc0,
            0x00, 0x01, 0xfc, 0x0f, 0xff, 0x03, 0xff, 0xc0, 0x00, 0x00, 0xf8, 0x1f, 0xff, 0x03,
            0xff, 0xc0, 0x00, 0x00, 0x78, 0x1f, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x20, 0x3f,
            0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00,
            0x00, 0x3f, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xf0,
            0x00, 0x00, 0x00, 0x3f, 0xff, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03,
            0xff, 0xf0, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x00, 0xff,
            0xff, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0xff, 0xf8, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        },
    },
};

AppSimulator::AppSimulator(BleServerHost& ble_server)
    : m_ble_server(ble_server)
    , m_current_point(*Wgs84ToOsmPoint(
          {
              // Stockholm
              59.34443143179733,
              18.04792142012441,

              // Enköping
              // 59.646331787827336, 17.07769480747484,
          },
          15))
{
    SetupStreetOrder();
}

hal::IGps&
AppSimulator::GetSimulatedGps()
{
    return m_gps;
}

void
AppSimulator::SetupStreetOrder()
{
    for (auto& street : kStreets)
    {
        m_streets.push_back(street);
    }

    std::ranges::shuffle(m_streets, m_random_engine);

    m_cached_images.clear();

    // In meters
    m_distance_left = 500;
    m_current_image = m_random_engine() % kImages.size();
}

std::optional<milliseconds>
AppSimulator::OnActivation()
{
    m_current_point.x++;
    m_current_point.y++;

    if (m_distance_left <= 0)
    {
        m_distance_left = 100 + (m_random_engine() % 90) * 10;
        m_streets.pop_back();
        m_current_image = m_random_engine() % kImages.size();
    }
    if (m_streets.empty())
    {
        SetupStreetOrder();
    }

    auto current_street = m_streets.back();

    auto nav_info = std::format(R"VOBB(nextRd={}
nextRdDesc=
distToNext={} m
totalDist={} m
eta=13:25
ete=5 min
iconHash={:08x}32
        )VOBB",
                                current_street,
                                m_distance_left,
                                5000,
                                kImages[m_current_image].key);

    m_ble_server.Inject(kChaNav, nav_info);

    if (m_cached_images.find(kImages[m_current_image].key) == m_cached_images.end())
    {
        m_ble_server.Inject(kChaNavTbtIcon, kImages[m_current_image].data);
        m_cached_images.insert(kImages[m_current_image].key);
    }

    m_distance_left -= 10;

    m_gps.NextPoint(m_current_point);

    return 250ms;
}


void
AppSimulator::SimulatedGps::NextPoint(const Point& point)
{
    m_current_point = point;
    m_data_semaphore.release();
}

std::optional<hal::RawGpsData>
AppSimulator::SimulatedGps::WaitForData(os::binary_semaphore& semaphore)
{
    m_data_semaphore.acquire();

    semaphore.release();

    hal::RawGpsData out;

    out.heading = 15; // TODO
    out.speed = 25;   // TODO
    out.position = OsmPointToWgs84(m_current_point, 15);

    return out;
}
